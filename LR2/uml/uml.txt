@startuml
skinparam classAttributeIconSize 0
skinparam dpi 300

abstract class BasicStudent {
	-- Поля --
	{field} # id
	{field} # git
	
	-- Публичные методы класса --
	{static} + read_from_txt (file_path)
	{static} + write_to_txt (file_path, stud_list)
	
	-- Защищённые методы класса --
	
	{static} # string_ctor_impl (str, ctor)
	{static} # get_field_value_hash (str)
	{static} # contact_type (contact)
	{static} # join_with_comma (str_arr)
	{static} # pretty_represent (field_prompt, value)
	{static} # inspect_represent (field)

	{static} # name_correct? (name)
	{static} # phone_correct? (phone)
	{static} # telegram_correct? (tg)
	{static} # email_correct? (email)
	{static} # git_correct? (git)
	{static} # surname_in_correct? (surname_initials)
	{static} # contact_correct? (contact)
	
	-- Публичные методы объекта --
	
	{method} + git_exists?()
	{method} + contact_exists?()
	{method} + validate()
	{method} + inspect()
	
	-- Защищённые методы объекта --
	
	{method} # inspect_impl(fields)
	
	-- Итератор --
	{method} + each{|field, value|}
}

class Student {
	-- Поля --
	{field} + id
	{field} + surname
	{field} + first_name
	{field} + mid_name
	{field} + phone
	{field} + telegram
	{field} + email
	{field} + git
	
	-- Конструкторы --
	
	{static} + initialize(surname:, first_name:, mid_name:, id:nil, phone:nil, telegram:nil, email:nil, git:nil)
	{static} + string_ctor(str)
	
	-- Статические методы --
	
	{static} + all_fields()
	
	-- Методы объекта --
	
	{method} + surname_initials()
	{method} + contact()
	{method} + get_info()
	{method} + set_contacts(phone: nil, telegram: nil, email: nil)
	{method} + to_s()
}

class ShortStudent {
	-- Геттеры --
	{field} + id
	{field} + surname_initials
	{field} + git
	{field} + contact
	
	-- Сеттеры --
	
	{method} - id=
	{method} - surname_initials=
	{method} - git=
	{method} - contact=

	-- Конструкторы --
	
	{static} - initialize(id:, surname_initials:, git:, contact:)
	{static} + student_ctor(student)
	{static} + id_string_ctor(id, str)
	{static} + string_ctor(str)
	
	-- Статические методы --
	
	{static} + all_fields()
	
	-- Методы объекта --
	
	{method} + to_s()
}

class DataTable {
	{field} - array
	
	-- Конструктор --
	{static} + initialize (array)
	
	-- Публичные методы --
	{method} + get(x, y)
	{method} + cols()
	{method} + rows()
	
	-- Приватные статические методы --
	{static} - check_array (arr)
}

abstract class DataList { 
	{field} # array
	
	-- Конструктор --
	{static} # initialize(arr)
	
	-- Публичные методы --
	{method} + select(num)
	{method} + unselect()
	{method} + get_selected()
	
	-- Шаблонные методы --
	{method} + get_data()
	{static} + get_names()
	
	-- МЕТОДЫ КОТОРЫЕ ОЧЕНЬ НАДО РЕАЛИЗОВАТЬ В ПОТОМКАХ --
	{method} - get_data_impl()
	{static} - get_names_impl()
}

class DataListStudentShort {
	{method} - get_data_impl()
	{static} - get_names_impl()
}

interface CheckCorrectnessWriter {
	{method} + checked_writer(field, correct, nil_expected: true, preprocess: lambda {|x| x})
}

abstract BasicStudentsFile {
	-- Конструктор --
	{static} + initialize()
	
	-- Методы --
	{method} + read_all_objects(file)
	{method} + write_all_objects(file)
	{method} + add_obj(obj)
	{method} + upd_obj(id, obj)
	{method} + del_obj(id)
	{method} + get_k_n_student_short_list(k, n)
	{method} + sort_si()
	{method} + get_students_count()
	
	-- Приватные методы --
	{method} - get_index(id)
	
	-- Абстрактные методы --
	{static} - parse(str)
	{static} - esrap(data_array)
}

class StudentsListTXT {
	-- Переопределённые методы --
	{static} - parse(str)
	{static} - esrap(data_array)
	
	-- Приватные методы --
	{static} - str_to_obj(str)
	{static} - obj_to_str(obj)
}

class StudentsListJSON {
	-- Переопределённые методы --
	{static} - parse(str)
	{static} - esrap(data_array)
}

class StudentsListYAML {
	-- Переопределённые методы --
	{static} - parse(str)
	{static} - esrap(data_array)
}

interface Enumerable {}

BasicStudent ..|> CheckCorrectnessWriter
DataTable ..|> CheckCorrectnessWriter
DataList ..|> CheckCorrectnessWriter

BasicStudent ..|> Enumerable

Student --|> BasicStudent
ShortStudent --|> BasicStudent
ShortStudent ..> Student 

DataListStudentShort --|> DataList
DataList ..> DataTable

BasicStudentsFile ..> Student
BasicStudentsFile ..> DataList

StudentsListTXT --|> BasicStudentsFile
StudentsListJSON --|> BasicStudentsFile
StudentsListYAML --|> BasicStudentsFile

@enduml